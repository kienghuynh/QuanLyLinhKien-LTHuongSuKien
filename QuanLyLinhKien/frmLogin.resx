<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACoAAAAqCAYAAADFw8lbAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABHxJREFUWEfFmNtvU0cQxvPvwBsPRUKq2oeCEBJI8NAAoqpUEQkJnkr7koqKBlKV
        EC7hJgw0KmlDuYkQEAgESEG0CVXbBNLEjn1wLrbjW1AvqKV9nPo76zneczw+3rWT8PCTfXZmdz/v8c7O
        Tst/xQItFoMjOdrQFaVziQX3E8+SXyM0JbS1P+eKMuWTh3lxHBOshX58ab5KwLa+LHUOTFMs4VAhM01/
        5NL0TyFH14YcOnwrSVv6qn/QZ1dS4vi1MBa6qz/rTXImukD7vp8V/cL4t8SKjhmf4CP3ZN8gRkL1gQee
        vBB9bLk9/MIb8/h4UfTRCRX6MvfSG+z9SFr0aYZsOumKxPit32ZFH6am0Hi88l98PhEXfRaLhJP05rr8
        aEb0EYXqK1lIz1XZl4LPr017c0p2Uehyi2Q+vaRWdvPF6vhbJZRFPlvi112LZ1HHnf/gU3+7TyiHoKXY
        ODb0/KY22MAPGa/NJ5RXU2+zpWcwTrsG89Q9VqT1kSzdH5kS/cKYjKtV1bV4QvnEaTROpmfnvMElpD5h
        fFk66dDvl5jq6wlFI04cfraFBXWPFmk6OeceoW3fVMRvP293ZL7KqYXbVson8OwT2sixCEZGY54gyc62
        uVlHtNcCenhMVyhnQbqTDVvL/XeWVjDMfvyWndA/cxm3X2sko4TioRmh3P/ncVnIe0dTrv3MnZhoDwP9
        OobLK4oHpGpBJ1Pe6UqUTpYEDY3KG3HKcaitN0HfPU6K9jC++FHp84Qinww6mbD5dIre6p6nHVfzdOBp
        kd4+kaWdN/N0uLSp1p7N0p67eToxsUAbe3O092GBMim7qPLhVRXbW3BdwBckvZJjGIiV6GvLxJT5XBtP
        qsjRwnccZOaSYxj65DZ0/SqPJzEWU+d/C3fG9UFyDIP72vLRjXlxPIkL9xNuH29FEaAlxzD0yXVeF1XG
        3j6UF+1rjplnZR9E1Anl/UdxEZMcw9AnZzp/8l8rJJ+OEfPb6NHB8qvHA77gthh0qoc+uU7UUWI3nE6L
        9u2XK1lRPXaXogb6eEJxpQ061UOfXOfrB0qIZAOrvjI/qrlPUycT9wuyrkdtFskG2h+bv3r473tSPpkQ
        iNGAe3fQMQx9chu2XDSLMOPRuOvfN/y7EgrQgOKA7lgPfXIbVnaa/Ue5WIHvPqHcaMrf+Sxt6q1UUExY
        fchM5F/lzInrVZ5Q1IJgQAWD294kbdfVArwqBFYU8K9GBUNvX25mZlS55+Rk5Q37hB4qxyyTWtBSwgv2
        ulBp8wkFXAtyko2lfc3y7hF1SOy/7Y/rVUIBClZwbr+yvGL39KuUrn2o2iYKBegAUGaR7IsNiwSSvaZQ
        VNW449ikfcJiA7/uWiJBTaEMClYYAGUWVDAkn0bh3Q2k161TVyhAwYoHRAUDxQHJzxQEc46TILhxJIyE
        AhSseGCA4gDu3ZJvLXB26zV8xEk9BIVhLJRBLQhlFl00rrS4LW46lXLvOLg+IDNH0sv5pM7e0rHIJ44p
        1kJ1tkYybnEgKEQCqRqyIGmc+hTof0FlDCbPimdEAAAAAElFTkSuQmCC
</value>
  </data>
</root>